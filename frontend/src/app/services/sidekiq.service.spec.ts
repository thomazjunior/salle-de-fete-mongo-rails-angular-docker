import { HttpClientTestingModule, HttpTestingController } from '@angular/common/http/testing';
import { TestBed } from '@angular/core/testing';
import { SidekiqService } from './sidekiq.service';

// üêê D√©crire le bloc principal des tests pour le service SidekiqService
describe('SidekiqService', () => {
  let service: SidekiqService;
  let httpMock: HttpTestingController;
  const apiUrl = 'http://localhost:3000';

  // üêê Initialisation du module de test avant chaque test
  beforeEach(() => {
    TestBed.configureTestingModule({
      imports: [HttpClientTestingModule], // Module pour simuler les requ√™tes HTTP
      providers: [SidekiqService]
    });
    service = TestBed.inject(SidekiqService);
    httpMock = TestBed.inject(HttpTestingController);
  });

  // üêê Nettoyage apr√®s chaque test
  afterEach(() => {
    httpMock.verify(); // V√©rifie qu'aucune requ√™te en attente ne reste ouverte
  });

  // üêê Tester la r√©cup√©ration des statistiques Sidekiq
  it('devrait r√©cup√©rer les statistiques de Sidekiq', () => {
    const mockStats = { processed: 100, failed: 2 }; // Donn√©es factices pour le test

    service.getSidekiqStats().subscribe(stats => {
      expect(stats).toEqual(mockStats); // V√©rifie que les donn√©es re√ßues sont correctes
    });

    // Simuler la requ√™te HTTP
    const req = httpMock.expectOne(`${apiUrl}/sidekiq-stats`);
    expect(req.request.method).toBe('GET'); // V√©rifier la m√©thode HTTP utilis√©e
    req.flush(mockStats); // Retourner les donn√©es factices
  });

  // üêê Tester le d√©clenchement du job anniversaire
  it("devrait d√©clencher le job d'anniversaire", () => {
    const mockResponse = { success: true }; // R√©ponse factice

    service.triggerBirthdayJob().subscribe(response => {
      expect(response).toEqual(mockResponse); // V√©rifie la r√©ponse
    });

    // Simuler la requ√™te HTTP
    const req = httpMock.expectOne(`${apiUrl}/trigger-birthday-job`);
    expect(req.request.method).toBe('POST'); // V√©rifier la m√©thode HTTP utilis√©e
    req.flush(mockResponse); // Retourner la r√©ponse factice
  });
});
